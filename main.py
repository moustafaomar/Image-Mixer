# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'tsk22223333.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from controller import ImageData
from PyQt5 import QtCore, QtGui, QtWidgets
import pyqtgraph as pg
from PyQt5.QtWidgets import QFileDialog, QMessageBox,QMainWindow
import numpy as np
import logging
class Ui_MainWindow(QMainWindow):
    logging.basicConfig(filename="logging.log", format='%(asctime)s %(message)s', filemode='w')
    def __init__(self):
        super(Ui_MainWindow, self).__init__()
        self.images = [None, None]
        self.output = [None,None]
        self.errors = []
        self.logger = logging.getLogger()
        self.logger.setLevel(logging.DEBUG)
        self.logger.debug("Application Run")
    def combo_update(self,id,val): 
        selector = None
        if id == 0:
                selector = self.input1_widget2
        else:
                selector = self.input2_widget2
        if self.images[id] is None:
                return
        selector.clear()
        img = pg.ImageItem(axisOrder='row-major')
        selector.addItem(img)
        if val ==0:
                data = 20 * np.log10(self.images[id].get_data()[val]) #magntidue
        else:
                data = self.images[id].get_data()[val] 
        selector.setXRange(min=0, max=data.shape[0], padding=0)
        selector.setYRange(min=0, max=data.shape[1], padding=0)
        img.setImage(data)
        
        selector.autoRange(padding=0)
    def combo_mixerimg1select(self,val1,mode1,val2,mode2,slider_val1,slider_val2):
         self.logger.debug('Mixer used')#possible combinations
         possible_combs = [
                 [0,1], [0,5], [1,0],[1,4],[2,3],[3,2],[4,1],[5,0], [5,4], [4,5]
         ]
         error_dialog = None
         if self.images == [None,None]:#error
                error_dialog = QtWidgets.QErrorMessage()
                error_dialog.showMessage('No images specified')
                self.logger.debug('No images specified')
         if [mode1,mode2] not in possible_combs and [mode2,mode1] not in possible_combs:
                error_dialog = QtWidgets.QErrorMessage()
                error_dialog.showMessage('Incorrect mix types')
                self.logger.debug('%s and %s are not compatible',mode1,mode2)
         if error_dialog != None:
                self.errors.append(error_dialog)
         else:
                #call mixer
                data = self.images[0].mix(self.images[1], mode1, mode2, slider_val1,slider_val2,val2,val1)
                selector = self.output[self.comboBox_7.currentIndex()]
                selector.clear()
                img = pg.ImageItem(axisOrder='row-major')
                selector.addItem(img)
                selector.setXRange(min=0, max=data.shape[0], padding=0)
                selector.setYRange(min=0, max=data.shape[1], padding=0)
                img.setImage(data)
                selector.autoRange(padding=0)
    def clicked(self,id):
        #
        selector = None
        if id == 0:
                selector = self.input1_widget1
        else:
                selector = self.input2_widget1
        try:
                selector.clear()
                img = pg.ImageItem(axisOrder='row-major')
                selector.addItem(img)
                filename = QFileDialog(self).getOpenFileName()
                path = filename[0]
                data = ImageData(path)
                if self.images[1-id]!= None and self.images[1-id].img_data.shape != data.img_data.shape:
                        error_dialog = QtWidgets.QErrorMessage()
                        error_dialog.showMessage('Incorrect image size')
                        self.logger.debug('Incorrect image size %s expecting %s',data.img_data.shape,self.images[1-id].img_data.shape)

                        self.errors.append(error_dialog)
                        return
                selector.setXRange(min=0, max=data.img_data.shape[0], padding=0)
                selector.setYRange(min=0, max=data.img_data.shape[1], padding=0)
                img.setImage(data.img_data)
                
                selector.autoRange(padding=0)
                self.images[id] = data
                n = 1
                if selector == self.input1_widget1:
                        n = 0
                self.combo_update(n,0)
        except:
                self.logger.debug("User closed before picking image")
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1218, 982)
        MainWindow.setStyleSheet("\n"
"background-color: rgb(40, 53, 51);\n"
"")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Image2 = QtWidgets.QPushButton(self.centralwidget)
        self.Image2.setGeometry(QtCore.QRect(250, 490, 93, 28))
        self.Image2.setStyleSheet("background-color: rgb(255, 219, 34);\n"
"color: rgb(0, 0, 0);\n"
"\n"
"")
        self.Image2.setObjectName("Image2")
        self.comboBox_3 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_3.setGeometry(QtCore.QRect(370, 490, 221, 28))
        self.comboBox_3.setStyleSheet("background-color: rgb(255, 219, 34);\n"
"color: rgb(0, 0, 0);\n"
"")
        self.comboBox_3.setObjectName("comboBox_3")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_2 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_2.setGeometry(QtCore.QRect(640, 20, 91, 22))
        self.comboBox_2.setStyleSheet("background-color: rgb(255, 219, 34);\n"
"color: rgb(0, 0, 0);\n"
"")
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_4 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_4.setGeometry(QtCore.QRect(750, 10, 111, 41))
        self.comboBox_4.setStyleSheet("background-color: rgb(255, 219, 34);\n"
"color: rgb(0, 0, 0);\n"
"\n"
"")
        self.comboBox_4.setObjectName("comboBox_4")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.horizontalSlider = QtWidgets.QSlider(self.centralwidget)
        self.horizontalSlider.setGeometry(QtCore.QRect(690, 110, 211, 22))
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.horizontalSlider.setMinimum(0)
        self.horizontalSlider.setMaximum(1)
        self.horizontalSlider.setRange(0,10)
        self.horizontalSlider.setTickInterval(0.1)
        self.horizontalSlider.setSingleStep(0.1)
       
        self.horizontalSlider.setValue(0)
        self.horizontalSlider.valueChanged.connect(lambda : self.combo_mixerimg1select(self.comboBox_2.currentIndex(),self.comboBox_4.currentIndex(),self.comboBox_5.currentIndex(),self.comboBox_6.currentIndex(),self.horizontalSlider.value(),self.horizontalSlider_2.value()))
        self.comboBox_5 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_5.setGeometry(QtCore.QRect(950, 20, 91, 22))
        self.comboBox_5.setStyleSheet("background-color: rgb(255, 219, 34);\n"
"color: rgb(0, 0, 0);\n"
"")
        self.comboBox_5.setObjectName("comboBox_5")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.setItemText(2, "")
        self.horizontalSlider_2 = QtWidgets.QSlider(self.centralwidget)
        self.horizontalSlider_2.setGeometry(QtCore.QRect(980, 110, 211, 22))
        self.horizontalSlider_2.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_2.setObjectName("horizontalSlider_2")
        self.horizontalSlider_2.setMinimum(0)
        self.horizontalSlider_2.setMaximum(1)
        self.horizontalSlider_2.setRange(0,10)
        self.horizontalSlider_2.setTickInterval(0.1)
        self.horizontalSlider_2.setSingleStep(0.1)
      
        self.horizontalSlider_2.setValue(0)
        self.horizontalSlider_2.valueChanged.connect(lambda: self.combo_mixerimg1select(self.comboBox_2.currentIndex(),self.comboBox_4.currentIndex(),self.comboBox_5.currentIndex(),self.comboBox_6.currentIndex(),self.horizontalSlider.value(),self.horizontalSlider_2.value()))
        self.comboBox_7 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_7.setGeometry(QtCore.QRect(630, 200, 291, 22))
        self.comboBox_7.setStyleSheet("background-color: rgb(255, 219, 34);\n"
"color: rgb(0, 0, 0);\n"
"")
        self.comboBox_7.setObjectName("comboBox_7")
        self.comboBox_7.addItem("")
        self.comboBox_7.addItem("")
        self.comboBox_6 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_6.setGeometry(QtCore.QRect(1060, 10, 111, 41))
        self.comboBox_6.setStyleSheet("background-color: rgb(255, 219, 34);\n"
"color: rgb(0, 0, 0);\n"
"")
        self.comboBox_6.setObjectName("comboBox_6")
        self.comboBox_6.addItem("")
        self.comboBox_6.addItem("")
        self.comboBox_6.addItem("")
        self.comboBox_6.addItem("")
        self.comboBox_6.addItem("")
        self.comboBox_6.addItem("")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(606, 0, 16, 871))
        self.line.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(255, 219, 34);")
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.line_3 = QtWidgets.QFrame(self.centralwidget)
        self.line_3.setGeometry(QtCore.QRect(0, 460, 591, 20))
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(10, 480, 161, 61))
        self.textBrowser.setStyleSheet("color: rgb(255, 255, 255);")
        self.textBrowser.setObjectName("textBrowser")
        self.comboBox_8 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_8.setGeometry(QtCore.QRect(360, 90, 221, 28))
        self.comboBox_8.setStyleSheet("background-color: rgb(255, 219, 34);\n"
"color: rgb(0, 0, 0);\n"
"")
        self.comboBox_8.setObjectName("comboBox_8")
        self.comboBox_8.addItem("")
        self.comboBox_8.addItem("")
        self.comboBox_8.addItem("")
        self.comboBox_8.addItem("")
        self.Image2_2 = QtWidgets.QPushButton(self.centralwidget)
        self.Image2_2.setGeometry(QtCore.QRect(10, 90, 93, 28))
        self.Image2_2.setStyleSheet("background-color: rgb(255, 219, 34);\n"
"color: rgb(0, 0, 0);\n"
"\n"
"")
        self.Image2.clicked.connect(lambda: self.clicked(1))
        self.Image2_2.clicked.connect(lambda: self.clicked(0))
        self.Image2_2.setObjectName("Image2_2")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_2.setGeometry(QtCore.QRect(10, 0, 161, 81))
        self.textBrowser_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.textBrowser_3 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_3.setGeometry(QtCore.QRect(630, 360, 121, 51))
        self.textBrowser_3.setStyleSheet("color: rgb(255, 255, 255);")
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.textBrowser_4 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_4.setGeometry(QtCore.QRect(640, 660, 121, 111))
        self.textBrowser_4.setStyleSheet("color: rgb(255, 255, 255);")
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.line_4 = QtWidgets.QFrame(self.centralwidget)
        self.line_4.setGeometry(QtCore.QRect(630, 170, 631, 20))
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.output1widget = PlotWidget(self.centralwidget,background=[255,255,255,0])
        self.output1widget.setGeometry(QtCore.QRect(800, 260, 381, 311))
        self.output1widget.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(255, 255, 255);")
        self.output1widget.setObjectName("output1widget")
        self.output1widget.showAxis('bottom', False)
        self.output1widget.showAxis('left', False)
        self.output1widget.invertY(True)
        self.output2widget = PlotWidget(self.centralwidget,background=[255,255,255,0])
        self.output2widget.setGeometry(QtCore.QRect(800, 590, 381, 311))
        self.output2widget.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.output2widget.setObjectName("output2widget")
        self.output2widget.showAxis('bottom', False)
        self.output2widget.showAxis('left', False)
        self.output2widget.invertY(True)
        self.input1_widget1 = PlotWidget(self.centralwidget,background=[255,255,255,0])
        self.input1_widget1.setGeometry(QtCore.QRect(10, 130, 281, 321))
        self.input1_widget1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.input1_widget1.setObjectName("input1_widget1")
        self.input1_widget1.showAxis('bottom', False)
        self.input1_widget1.showAxis('left', False)
        self.input1_widget1.invertY(True)
        self.output = [self.output1widget,self.output2widget]
        self.comboBox_3.currentIndexChanged.connect(lambda n:self.combo_update(1, n))
        self.comboBox_8.currentIndexChanged.connect(lambda n:self.combo_update(0, n))
        
        self.comboBox_2.currentIndexChanged.connect(lambda n: self.combo_mixerimg1select(n,self.comboBox_4.currentIndex(),self.comboBox_5.currentIndex(),self.comboBox_6.currentIndex(),self.horizontalSlider.value(),self.horizontalSlider_2.value()))
        
        self.comboBox_5.currentIndexChanged.connect(lambda n: self.combo_mixerimg1select(self.comboBox_2.currentIndex(),self.comboBox_4.currentIndex(),n,self.comboBox_6.currentIndex(),self.horizontalSlider.value(),self.horizontalSlider_2.value()))
        self.comboBox_4.currentIndexChanged.connect(lambda n: self.combo_mixerimg1select(self.comboBox_2.currentIndex(), n,self.comboBox_5.currentIndex(),self.comboBox_6.currentIndex(),self.horizontalSlider.value(),self.horizontalSlider_2.value()))
        self.comboBox_6.currentIndexChanged.connect(lambda n: self.combo_mixerimg1select(self.comboBox_2.currentIndex(),self.comboBox_4.currentIndex(),self.comboBox_5.currentIndex(), n,self.horizontalSlider.value(),self.horizontalSlider_2.value()))
        
        self.input1_widget2 = PlotWidget(self.centralwidget,background=[255,255,255,0])
        self.input1_widget2.setGeometry(QtCore.QRect(320, 130, 281, 321))
        self.input1_widget2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.input1_widget2.setObjectName("input1_widget2")
        self.input1_widget2.showAxis('bottom', False)
        self.input1_widget2.showAxis('left', False)
        self.input1_widget2.invertY(True)
        self.input2_widget1 = PlotWidget(self.centralwidget,background=[255,255,255,0])
        self.input2_widget1.setGeometry(QtCore.QRect(10, 590, 281, 321))
        self.input2_widget1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.input2_widget1.setObjectName("input2_widget1")
        self.input2_widget1.showAxis('bottom', False)
        self.input2_widget1.showAxis('left', False)
        self.input2_widget1.invertY(True)
        self.input2_widget2 = PlotWidget(self.centralwidget,background=[255,255,255,0])
        self.input2_widget2.setGeometry(QtCore.QRect(320, 590, 281, 321))
        self.input2_widget2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.input2_widget2.setObjectName("input2_widget2")
        self.input2_widget2.showAxis('bottom', False)
        self.input2_widget2.showAxis('left', False)
        self.input2_widget2.invertY(True)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1218, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Image2.setText(_translate("MainWindow", "New image"))
        self.comboBox_3.setItemText(0, _translate("MainWindow", "Magnitude"))
        self.comboBox_3.setItemText(1, _translate("MainWindow", "Phase"))
        self.comboBox_3.setItemText(2, _translate("MainWindow", "Real"))
        self.comboBox_3.setItemText(3, _translate("MainWindow", "Imaginary"))
        self.comboBox_2.setItemText(0, _translate("MainWindow", "Image 1"))
        self.comboBox_2.setItemText(1, _translate("MainWindow", "Image 2"))
        self.comboBox_4.setItemText(0, _translate("MainWindow", "Magnitude"))
        self.comboBox_4.setItemText(1, _translate("MainWindow", "Phase"))
        self.comboBox_4.setItemText(2, _translate("MainWindow", "Real"))
        self.comboBox_4.setItemText(3, _translate("MainWindow", "Imaginary"))
        self.comboBox_4.setItemText(4, _translate("MainWindow", "Uniform magnitude"))
        self.comboBox_4.setItemText(5, _translate("MainWindow", "Uniform Phase"))
        self.comboBox_5.setItemText(0, _translate("MainWindow", "Image 1"))
        self.comboBox_5.setItemText(1, _translate("MainWindow", "Image 2"))
        self.comboBox_7.setItemText(0, _translate("MainWindow", "Output1"))
        self.comboBox_7.setItemText(1, _translate("MainWindow", "Output 2"))
        self.comboBox_6.setItemText(0, _translate("MainWindow", "Magnitude"))
        self.comboBox_6.setItemText(1, _translate("MainWindow", "Phase"))
        self.comboBox_6.setItemText(2, _translate("MainWindow", "Real"))
        self.comboBox_6.setItemText(3, _translate("MainWindow", "Imaginary"))
        self.comboBox_6.setItemText(4, _translate("MainWindow", "Uniform magnitude"))
        self.comboBox_6.setItemText(5, _translate("MainWindow", "Uniform Phase"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">Image 2</span></p></body></html>"))
        self.comboBox_8.setItemText(0, _translate("MainWindow", "Magnitude"))
        self.comboBox_8.setItemText(1, _translate("MainWindow", "Phase"))
        self.comboBox_8.setItemText(2, _translate("MainWindow", "Real"))
        self.comboBox_8.setItemText(3, _translate("MainWindow", "Imaginary"))
        self.Image2_2.setText(_translate("MainWindow", "New image"))
        self.textBrowser_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">Image 1</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:16pt;\"><br /></p></body></html>"))
        self.textBrowser_3.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">Output 1</span></p></body></html>"))
        self.textBrowser_4.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">Output 2</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:16pt;\"><br /></p></body></html>"))
from pyqtgraph import PlotWidget


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
